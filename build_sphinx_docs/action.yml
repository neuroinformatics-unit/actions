name: 'Build Sphinx Docs'
description: 'Builds sphinx docs and publishes them to GitHub Pages'

inputs:
  python-version:
    description: 'Python version'
    required: false
    type: string
    default: '3.x'
  fetch-tags:
    description: 'Fetch tags'
    required: false
    type: boolean
    default: false
  check-links:
    description: 'Check links'
    required: false
    type: boolean
    default: true
  use-make:
    description: 'Use `make` with linkcheck and building html'
    required: false
    type: boolean
    default: false
  use-artifactci:
    description: 'Set to "lazy" or "eager" to use artifact.ci with the specified mode; "false" uses actions/upload-artifact.'
    required: false
    type: string
    default: 'false'
    # See https://www.artifact.ci/advanced

runs:
  using: 'composite'
  steps:
  - uses: actions/checkout@v5
    with:
      fetch-depth: ${{ inputs.fetch-tags == 'false' && 1 || 0 }}  
      # If 0, fetch all history for all branches and tags. Default is 1 (only the latest commit).
      # The value after && needs to be truthy, hence the "inverted" conditional.
      fetch-tags: ${{ inputs.fetch-tags == 'true' }}

  - name: Setup Python
    uses: actions/setup-python@v5
    with:
      python-version: ${{ inputs.python-version }}

  - name: Upgrade pip
    shell: bash
    run: |
      # install pip=>20.1 to use "pip cache dir"
      python3 -m pip install --upgrade pip

  - name: Get pip cache dir
    shell: bash
    id: pip-cache
    run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

  - name: Cache dependencies
    uses: actions/cache@v4
    with:
      path: ${{ steps.pip-cache.outputs.dir }}
      key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      restore-keys: |
        ${{ runner.os }}-pip-

  - name: Install dependencies
    shell: bash
    run: python3 -m pip install -r ./docs/requirements.txt

  - name: Check links
    if: ${{ inputs.check-links == 'true' }}
    shell: bash
    run: | 
      if [ ${{ inputs.use-make }} == 'true' ]; then
        cd docs && make linkcheck
      else
        sphinx-build docs/source docs/build -b linkcheck
      fi

  # needs to have sphinx.ext.githubpages in conf.py extensions list
  - name: Building documentation
    shell: bash
    run: | 
      if [ ${{ inputs.use-make }} == 'true' ]; then
        cd docs && make html
      else
        sphinx-build docs/source docs/build -b html -W --keep-going
      fi

  - name: Upload the content for deployment
    if: ${{ inputs.use-artifactci == 'false' }}
    uses: actions/upload-artifact@v4
    with:
      name: docs-build
      path: ./docs/build/

  - name: Upload the content for deployment using artifact.ci
    if: ${{ inputs.use-artifactci != 'false' }}
    id: artifactci-upload
    # Using fork until https://github.com/mmkal/artifact.ci/issues/10 is resolved
    uses: neuroinformatics-unit/artifact.ci/upload@upload-root-dir
    with:
      name: docs-build
      path: ./docs/build/
      artifactci-mode: ${{ inputs.use-artifactci }} 

  - name: Print docs preview URL to step summary
    if: ${{ inputs.use-artifactci != 'false' }}
    shell: bash
    run: |
      if [ "${{ inputs.use-artifactci }}" == "lazy" ]; then
        echo "Preview docs at ${{ steps.artifactci-upload.outputs.artifactci-run-url }}, " >> $GITHUB_STEP_SUMMARY
        echo "under the _Detected Entrypoints_ section (requires GitHub sign-in)" >> $GITHUB_STEP_SUMMARY
      else
        echo "Preview docs at: ${{ steps.artifactci-upload.outputs.artifactci-entrypoint-0 }}" >> $GITHUB_STEP_SUMMARY
      fi